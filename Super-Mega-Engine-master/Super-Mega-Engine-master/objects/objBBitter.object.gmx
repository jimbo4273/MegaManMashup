<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBBitter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):

event_inherited();

image_xscale = -1;

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

//Enemy specific code
initRadius = 4 * 16; //Four blocks; the radius that MM needs to enter to trigger the shooting of the B Bitter.
radius = initRadius;
shootTimer = 0;
shooting = false;
image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if global.frozen == false &amp;&amp; dead == false
{
    if (shooting == false &amp;&amp; instance_exists(prtPlayer))
    {
        if x &lt; prtPlayer.x
            image_xscale = 1;
        else
            image_xscale = -1;
            
        if distance_to_object(prtPlayer) &lt;= radius
        {
            shooting = true;
        }
    }

    if (shooting)
    {
        shootTimer += update_rate;
        if floor(shootTimer) == 7 {
            shootTimer = 8;
            if x &lt; prtPlayer.x
                image_xscale = 1;
            else
                image_xscale = -1;
        
            image_index = 1;
        }
        else if floor(shootTimer) == 14 {
            image_index = 2;
        }
        else if floor(shootTimer) == 21 {
            image_index = 3;
        }
        else if floor(shootTimer) == 33 {
            image_index = 4;
        }
        else if floor(shootTimer) == 40 {
            image_index = 5;
        }
        else if floor(shootTimer) == 45 {    
            shootTimer = 46;
            var shootID;            
            var delta;
            
            if (image_xscale &lt; 0)
                delta = -11;
            else
                delta = 11;
                            
            shootID = instance_create(x + delta, y - 2, objMM2Bullet);
            shootID.sprite_index = sprMM5Bullet;
            shootID.dir = 0;
            shootID.contactDamage = 4;
            shootID.xscale = image_xscale;
                
            playSFX(sfxEnemyShootClassic);
        }
        else if floor(shootTimer) == 51 {
            image_index = 4;
        }
        else if floor(shootTimer) == 58 {
            image_index = 3;
        }
        else if floor(shootTimer) == 69 {
            image_index = 2;
        }
        else if floor(shootTimer) == 76 {
            image_index = 1;
        }
        else if shootTimer &gt;= 83 {
            image_index = 0;
            shootTimer = -30;
            shooting = false;
        }
    }
}
else {
    if dead {
        shootTimer = 0;
        shooting = false;
        image_index = 0;
        image_speed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
