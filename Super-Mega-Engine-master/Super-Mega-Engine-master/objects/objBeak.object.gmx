<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBeakRed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//col = &lt;number&gt; (0 = red (default); 1 = orange; 2 = blue)
//dir = -1/1 (1 = faces right (default); -1 = faces left)

event_inherited();

reflectProjectiles = true;

damage[objMetalBlade] = 2;

damage[objPharaohShot] = 2;
damage[objPharaohShotCharged] = 4;
damage[objPharaohShotCharging] = 4;

damage[objSilverTomahawk] = 2;

damage[objWindStorm] = 2;


//Enemy specific code
col = 0; //0 = red; 1 = orange; 2 = blue
    
dir = 1;

shootTimer = 0;
shooting = false;
image_speed = 0;
image_index = 0;


alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the correct color
switch col
{
    case 0: sprite_index = sprBeakRed; break;
    case 1: sprite_index = sprBeakOrange; break;
    case 2: sprite_index = sprBeakBlue; break;
    default: sprite_index = sprBeakRed; break;
}

image_xscale = dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen and !dead {
    if !shooting {
        shootTimer += update_rate;
        if floor(shootTimer) == 90
            image_index = 1;
        else if floor(shootTimer) == 97
            image_index = 2;
        else if floor(shootTimer) == 104
            image_index = 3;
        else if floor(shootTimer) == 107 {
            shootTimer = 0;
            shooting = true;
        }
    }
    else {
        shootTimer += update_rate;
        if floor(shootTimer) == 1 {
            shootTimer = 2;
            var shootID = instance_create(x+image_xscale*16, y+8, objBeakBullet);
            shootID.image_index = col;
            shootID.dir = 45;
            shootID.xscale = dir;
                
            playSFX(sfxEnemyShootClassic);
        }
        else if floor(shootTimer) == 31 {
            shootTimer = 32;
            var shootID = instance_create(x+image_xscale*16, y+8, objBeakBullet);
            shootID.image_index = col;
            shootID.dir = 15;
            shootID.xscale = dir;
                
            playSFX(sfxEnemyShootClassic);
        }
        else if floor(shootTimer) == 61 {
            shootTimer = 62;
            var shootID = instance_create(x+image_xscale*16, y+8, objBeakBullet);
            shootID.image_index = col;
            shootID.dir = -15;
            shootID.xscale = dir;
                
            playSFX(sfxEnemyShootClassic);
        }
        else if floor(shootTimer) == 91 {
            shootTimer = 92;
            var shootID = instance_create(x+image_xscale*16, y+8, objBeakBullet);
            shootID.image_index = col;
            shootID.dir = -45;
            shootID.xscale = dir;
                
            playSFX(sfxEnemyShootClassic);
                
            image_index = 2;
        }
        else if floor(shootTimer) == 98 {
            image_index = 1;
        }
        else if floor(shootTimer) == 105 {
            image_index = 0;
            shooting = false;
            shootTimer = 0;
        }
    }
    
    
    //Handle's the Beak's protection
    if image_index == 0
        reflectProjectiles = true;
    else
        reflectProjectiles = false;
}
else {
    if dead {
        shootTimer = 0;
        shooting = false;
        image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
