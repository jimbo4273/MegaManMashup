<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBossDoorH</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code:
//dir = -1/1 (-1 = opened from the top (default); 1 = opened from the bottom)

dir = -1;
    
opening = false;
closing = false;
canOpen = true;
openY = 0;
openImgSpeed = 0.15;
image_speed = 0;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dir == -1 {
    mySolid = instance_create(x, y+16, objSolid);
    mySolid.image_xscale = 4;
}
else {
    mySolid = instance_create(x, y, objSolid);
    mySolid.image_xscale = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canOpen == true
{
    if instance_exists(prtPlayer)
    {
        //Colliding with the player. We're checking y+7 because in the NES games, the player needs to be slightly inside the door
        //for it to activate.
        if (collision_rectangle(x, y+7, x+sprite_width, y+7, prtPlayer, false, false) &amp;&amp; dir == -1)
        || (collision_rectangle(x, y+sprite_height-7, x+sprite_width, y+sprite_height-7, prtPlayer, false, false) &amp;&amp; dir == 1)
        {
            canOpen = false;
            opening = true;
            image_speed = openImgSpeed;
            playSFX(sfxDoor);
            with mySolid instance_destroy();
            
            //Switch sections
            if dir == -1 //Switch to the bottom
            {
                with prtPlayer
                {
                    instance_activate_object(objSectionBorderLeft);
                    instance_activate_object(objSectionBorderRight);
                    instance_activate_object(objSectionBorderTop);
                    instance_activate_object(objSectionBorderBottom);
                    instance_activate_object(objSectionArrowLeft);
                    instance_activate_object(objSectionArrowRight);
                    instance_activate_object(objSectionArrowUp);
                    instance_activate_object(objSectionArrowDown);
                    newSectionXOffset = 0;
                    newSectionYOffset = 64;
                    
                    alarm[2] = 1;
                }
            }
            else //Switch to the top
            {
                with prtPlayer
                {
                    instance_activate_object(objSectionBorderLeft);
                    instance_activate_object(objSectionBorderRight);
                    instance_activate_object(objSectionBorderTop);
                    instance_activate_object(objSectionBorderBottom);
                    instance_activate_object(objSectionArrowLeft);
                    instance_activate_object(objSectionArrowRight);
                    instance_activate_object(objSectionArrowUp);
                    instance_activate_object(objSectionArrowDown);
                    newSectionXOffset = 0;
                    newSectionYOffset = -64;
                    
                    alarm[2] = 1;
                }
            }
        }
    }
}


if opening == true
{
    if floor(image_index) == 4
    {
        image_index = 4;
        image_speed = 0;
    }
}

if closing == true
{
    image_speed = openImgSpeed;
    if floor(image_index) == 8
    {
        image_index = 8;
        
        if dir == -1
        {
            mySolid = instance_create(x, y+16, objSolid);
                mySolid.image_xscale = 4;
        }
        else
        {
            mySolid = instance_create(x, y, objSolid);
                mySolid.image_xscale = 4;
        }
            
        with objSectionSwitcher
        {
            global.frozen = false;
            prtPlayer.visible = true;
            instance_destroy();
            with prtPlayer playerDeactivateObjects();
        }
        
        closing = false;
        image_speed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawSelf();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>1,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
