<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSpineRed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):
//col = &lt;number&gt; (0 = red (default); 1 = orange; 2 = blue)
//dir = -1/1 (1 = faces right (default); -1 = faces left)

event_inherited();

contactDamage = 3;

var damages = array_length_1d(damage);
for (var i = 0; i &lt; damages; i++) {
    damage[i] = 0;
}

damage[objPharaohShot] = 1;
damage[objPharaohShotCharging] = 1;
damage[objPharaohShotCharged] = 1;
damage[objDrillBombExplosion] = 1;
damage[objTimeSlow] = 1;

//Enemy specific code
col = 0; //0 = red; 1 = orange; 2 = blue
frozeTimer = 0;
dashing = false;
startDir = -1; // Default start direction is left.

image_speed = 0.2;
image_index = 0;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set the correct color
switch col
{
    case 0: sprite_index = sprSpineRed; break;
    case 1: sprite_index = sprSpineOrange; break;
    case 2: sprite_index = sprSpineBlue; break;
    default: sprite_index = sprSpineRed; break;
}

beginStartDir = startDir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen and !dead {
    if instance_exists(prtPlayer) {
        if x &lt; prtPlayer.x
            image_xscale = 1;
        else
            image_xscale = -1;
        
        // If this Gabyoall and Mega Man are on the same height, have the Gabyoall start dashing.
        if abs(y - (prtPlayer.y - prtPlayer.sprite_yoffset + prtPlayer.sprite_height)) &lt; 4
            dashing = true;
        else
            dashing = false;
    }
    
    if dashing
        xspeed = startDir * 2;
    else
        xspeed = startDir * 0.5;
        
    generalCollision();
    
    if floor(frozeTimer) == 0 {
        frozeTimer = 0;    
        image_speed = 0.2 * update_rate;
    
        if (xspeed == 0 || 
            !collision_rectangle(x+(startDir*8), y, x+(startDir*8), y+1, objSolid, false, false)) {
            startDir = -startDir;   //Change the direction
        }
        
    }
    else {
        image_speed = 0;
        xspeed = 0;
        frozeTimer -= update_rate;
    }
}
else {
    xspeed = 0;
    yspeed = 0;

    if dead {
        startDir = beginStartDir;
        dashing = false;
        frozeTimer = 0;
        image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBusterShotCharged">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
frozeTimer = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBusterShotHalfCharged">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
frozeTimer = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBusterShot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
frozeTimer = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
