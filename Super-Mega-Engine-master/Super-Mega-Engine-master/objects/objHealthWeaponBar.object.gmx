<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>increaseHealth = false;
increaseHealthAmount = 0;

increaseAmmo = false;
increaseAmmoAmount = 0;

increaseAmmoOffscreen = false;
weaponToIncreaseIndex = 0;

increaseTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(prtPlayer) {
    x = prtPlayer.x;
    y = prtPlayer.y;
}

if increaseHealth {
    if increaseHealthAmount &gt; 0 &amp;&amp; global._health &lt; global._maxHealth {
        increaseTimer++;
        if increaseTimer &gt;= 3 {
            global._health += 1;
            increaseHealthAmount -= 1;
            increaseTimer = 0;
        }
    }
    else {
        increaseHealth = false;
        if global._health &gt; global._maxHealth
            global._health = global._maxHealth;
        global.frozen = false;
        increaseTimer = 0;
        stopSFX(sfxEnergyRestore);
    }
}
else if increaseAmmo {
    if increaseAmmoAmount &gt; 0 &amp;&amp; global.weapons[global.currentWeapon].ammo &lt; global.maxAmmo {
        increaseTimer++;
        if increaseTimer &gt;= 3 {
            global.weapons[global.currentWeapon].ammo += 1;
            increaseAmmoAmount -= 1;
            increaseTimer = 0;
        }
    }
    else {
        increaseAmmo = false;
        if global.weapons[global.currentWeapon].ammo &gt; global.maxAmmo
            global.weapons[global.currentWeapon].ammo = global.maxAmmo;
        global.frozen = false;
        increaseTimer = 0;
        stopSFX(sfxEnergyRestore);
    }
}
else if increaseAmmoOffscreen {
    if increaseAmmoAmount &gt; 0 &amp;&amp; global.weapons[weaponToIncreaseIndex].ammo &lt; global.maxAmmo {
        increaseTimer++;
        if increaseTimer &gt;= 3 {
            global.weapons[weaponToIncreaseIndex].ammo++;
            increaseAmmoAmount--;
            increaseTimer = 0;
        }
    }
    else {
        increaseAmmoOffscreen = false;
        if global.weapons[weaponToIncreaseIndex].ammo &gt; global.maxAmmo
            global.weapons[weaponToIncreaseIndex].ammo = global.maxAmmo;
        global.frozen = false;
        increaseTimer = 0;
        stopSFX(sfxEnergyRestore);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Health

// If Mega's max health is set to the classic 28.
if (global._maxHealth == 28)
{
    draw_sprite(sprHealthbarBackground, 0, view_xview[0]+7+8+5, view_yview[0]+17);
    
    for(i = 1; i &lt;= global._health; i += 1)
    {
        draw_sprite_ext(sprHealthbarPrimary, 0, view_xview[0]+7+8+1+5, view_yview[0]+17+(sprite_get_height(sprHealthbarBackground)-i*2), 1, 1, 0, make_color_rgb(252, 228, 160), 1);
        draw_sprite_ext(sprHealthbarSecondary, 0, view_xview[0]+7+8+1+5, view_yview[0]+17+(sprite_get_height(sprHealthbarBackground)-i*2), 1, 1, 0, make_color_rgb(248, 248, 248), 1);
    }
}
else
{
    for (i = 1; i &lt;= global._maxHealth; i += 1)
    {
        if (i &lt; global._maxHealth)
            draw_rectangle_color(view_xview[0]+7+8+5-0.5, view_yview[0]+17+(sprite_get_height(sprHealthbarBackground)-i*2), view_xview[0]+7+8+5+8-0.5, view_yview[0]+17-3+(sprite_get_height(sprHealthbarBackground)-i*2), c_black, c_black, c_black, c_black, false);
        else
            draw_rectangle_color(view_xview[0]+7+8+5-0.5, view_yview[0]+17+(sprite_get_height(sprHealthbarBackground)-i*2), view_xview[0]+7+8+5+8-0.5, view_yview[0]+17-1+(sprite_get_height(sprHealthbarBackground)-i*2), c_black, c_black, c_black, c_black, false);
             
        if (i &lt;= global._health)
        {
           draw_sprite_ext(sprHealthbarPrimary, 0, view_xview[0]+7+8+1+5, view_yview[0]+17+(sprite_get_height(sprHealthbarBackground)-i*2), 1, 1, 0, make_color_rgb(252, 228, 160), 1);
           draw_sprite_ext(sprHealthbarSecondary, 0, view_xview[0]+7+8+1+5, view_yview[0]+17+(sprite_get_height(sprHealthbarBackground)-i*2), 1, 1, 0, make_color_rgb(248, 248, 248), 1);
        }
    }
}


//Weapons
if global.weapon != 0 {
    draw_sprite(sprHealthbarBackground, 0, view_xview[0]+7+5, view_yview[0]+17);
    
    for(i = 1; i &lt;= ceil(global.weapons[global.currentWeapon].ammo); i += 1) {
        draw_sprite_ext(sprHealthbarPrimary, 0, view_xview[0]+7+1+5, view_yview[0]+17+(sprite_get_height(sprHealthbarBackground)-i*2), 1, 1, 0, global.primaryCol, 1);
        draw_sprite_ext(sprHealthbarSecondary, 0, view_xview[0]+7+1+5, view_yview[0]+17+(sprite_get_height(sprHealthbarBackground)-i*2), 1, 1, 0, global.secondaryCol, 1);
    }
}

if cfgShowLives {
    draw_set_colour(c_white);
    draw_text(view_xview[0]+7+8+1+5, view_yview[0]+18+sprite_get_height(sprHealthbarBackground), string(max(0,global._lives)));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
