<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_font(global.MM3font);
draw_set_valign(fa_top);
draw_set_halign(fa_center);

if !audio_is_playing(bgmMainMenu) {
    playMusicVolume(bgmMainMenu, 0.7);
}

waiting = false;

menu[0] = "LEFT";
menu[1] = "RIGHT";
menu[2] = "UP";
menu[3] = "DOWN";
menu[4] = "JUMP";
menu[5] = "SHOOT";
menu[6] = "PREV WPN";
menu[7] = "NEXT WPN";
menu[8] = "PAUSE";
menu[9] = "SELECT";

key[0] = global.leftButton;
key[1] = global.rightButton;
key[2] = global.upButton;
key[3] = global.downButton;
key[4] = global.jumpButton;
key[5] = global.shootButton;
key[6] = global.weaponSwitchLeftButton;
key[7] = global.weaponSwitchRightButton;
key[8] = global.pauseButton;
key[9] = global.selectButton;

var current_item = 10;
if cfgEnableSlideKey {
    menu[current_item] = "SLIDE";
    key[current_item] = global.slideButton;
    current_item++;
}

menu[current_item] = "RESET";
current_item++;
menu[current_item] = "BACK";

num_menu_items = array_length_1d(menu);

selected = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objFadeout)) exit;

key[0] = global.leftButton;
key[1] = global.rightButton;
key[2] = global.upButton;
key[3] = global.downButton;
key[4] = global.jumpButton;
key[5] = global.shootButton;
key[6] = global.weaponSwitchLeftButton;
key[7] = global.weaponSwitchRightButton;
key[8] = global.pauseButton;
key[9] = global.selectButton;
key[10] = global.slideButton;

if !waiting {
    if global.keyUpPressed {
        selected--;
        if selected &lt; 0 {
            selected = num_menu_items - 1;
        }
        playSFX(sfxMenuMove);
    }
    else if global.keyDownPressed || global.keySelectPressed {
        selected++;
        if selected &gt;= num_menu_items {
            selected = 0;
        }
        playSFX(sfxMenuMove);
    }
    else if global.keyPausePressed || global.keyJumpPressed || global.keyShootPressed {
        switch menu[selected] {
            case "RESET":
                reset_buttons();
                save_configs();
                break;
            case "BACK":
                playSFX(sfxMenuSelect);            
                var ID = instance_create(0, 0, objFadeout);
                ID.type = "room";
                ID.myRoom = rmMainMenu;
                break;
            default:
                playSFX(sfxMenuSelect3);
                waiting = true;
        }
    }
}
else {  //Set button
    var button = gamepad_button_check_pressed_all();
    if button != false {
        switch selected {
            case 0: global.leftButton = button; break;
            case 1: global.rightButton = button; break;
            case 2: global.upButton = button; break;
            case 3: global.downButton = button; break;
            case 4: global.jumpButton = button; break;
            case 5: global.shootButton = button; break;
            case 6: global.weaponSwitchLeftButton = button; break;
            case 7: global.weaponSwitchRightButton = button; break;
            case 8: global.pauseButton = button; break;
            case 9: global.selectButton = button; break;
            case 10: global.slideButton = button; break;
        }
        waiting = false;
        save_configs();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);

draw_text(room_width / 2, 30, "GAMEPAD CONFIG");

var initial_y = 50;
var vspace = 12;
var left = 70;

draw_set_halign(fa_left);

for (var i = 0; i &lt; num_menu_items; i++) {
    if i &gt;= num_menu_items - 2 {
        draw_set_halign(fa_center);
        draw_text(room_width / 2, i * vspace + initial_y, menu[i]);
    }
    else {
        draw_text(left, i * vspace + initial_y, menu[i]);
        if waiting and i == selected {
            draw_text(room_width / 2 + 20, i * vspace + initial_y, "PRESS");
        }
        else {
            draw_text(room_width / 2 + 20, i * vspace + initial_y, string_upper(button_to_string(key[i])));
        }
    }
}

if selected &gt;= num_menu_items - 2 {
    draw_sprite(sprPassArrow, 0, room_width / 2 - 24, selected * vspace + initial_y + 3);
}
else {
    draw_sprite(sprPassArrow, 0, left - 10, selected * vspace + initial_y + 3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
