<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtWeapon</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

name = "MEGA BUSTER";
abbrev = "M.BUSTER";
consumption = 0;
initChargeTime = 20; //The amount of frames after which to start charging after the shooting animation is complete
chargeTime = 57; //Official value of MM6
maxshots = cfgMaxNumberOfBusterShots;

primaryCol = make_color_rgb(0, 120, 248);
secondaryCol = make_color_rgb(0, 232, 216);

outlineChargeCol1 = make_color_rgb(168, 0, 32);
outlineChargeCol2 = make_color_rgb(228, 0, 88);
outlineChargeCol3 = make_color_rgb(248, 88, 152);

chargeCol1 = make_color_rgb(0, 232, 216);
chargeCol2 = make_color_rgb(0, 120, 248);

character = objMegaman;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// onReleaseCharge
event_inherited();

if (prtPlayer.canMove || prtPlayer.climbing) &amp;&amp; chargeTimer != 0 {
  
    prtPlayer.isShoot = true;
    prtPlayer.shootTimer = 0;

    if chargeTimer &lt; chargeTime {
        attackID = instance_create(box + prtPlayer.image_xscale * 6, yy, objBusterShotHalfCharged);
        playSFX(sfxBusterHalfCharged);
    }
    else {
        attackID = instance_create(box + prtPlayer.image_xscale * 14, yy, objBusterShotCharged);
        playSFX(sfxBusterCharged);
    }
    
    chargeTimer = 0;
    initChargeTimer = 0;
    stopSFX(sfxCharged);
    stopSFX(sfxCharging);
    with prtPlayer event_user(0); //Reset the colors
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// onCharging
if !cfgEnableCharge exit;

event_inherited();

if (prtPlayer.canMove || prtPlayer.isSlide || prtPlayer.climbing) &amp;&amp; !prtPlayer.isShoot {
    prtPlayer.isCharge = true;
    
    if !prtPlayer.isSlide or cfgBeginChargeOnSlide
        initChargeTimer += 1;
        
    if initChargeTimer &gt;= initChargeTime {
        chargeTimer += 1;
        
        if chargeTimer == 1
            playSFX(sfxCharging);
        
        if chargeTimer &lt; chargeTime {
            var chargeTimeDiv, chargeCol;
            chargeTimeDiv = round(chargeTime / 3);
            if chargeTimer &lt; chargeTimeDiv
                chargeCol = outlineChargeCol1;     //Dark red
            else if chargeTimer &lt; chargeTimeDiv * 2
                chargeCol = outlineChargeCol2;     //Red (dark pink)
            else
                chargeCol = outlineChargeCol3;   //Light red (pink)
                
            if chargeTimer mod 4 == 0 || chargeTimer mod 4 == 1
                global.outlineCol = chargeCol;
            else
                global.outlineCol = c_black;
        }
        else {
            if chargeTimer == chargeTime {
                stopSFX(sfxCharging);
                playSFX(sfxCharged);
            }
            
            switch (chargeTimer/2 mod 3) {
                case 0: //Light blue helmet, black shirt, blue outline
                    global.primaryCol = chargeCol1
                    global.secondaryCol = c_black;
                    global.outlineCol = chargeCol2;
                break;
                
                case 1: //Black helmet, blue shirt, light blue outline
                    global.primaryCol = c_black;
                    global.secondaryCol = chargeCol2;
                    global.outlineCol = chargeCol1;
                break;
                
                case 2: //Blue helmet, light blue shirt, blue outline
                    global.primaryCol = chargeCol2;
                    global.secondaryCol = chargeCol1;
                    global.outlineCol = c_black;
                break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// onBeginCharge
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// onShoot
event_inherited();
if !ok return false;    //This line should be on every weapon

if instance_number(objBusterShot) + instance_number(objBusterShotHalfCharged) + instance_number(objReflectedProjectile) &lt; maxshots {

    attackID = instance_create(box + prtPlayer.image_xscale * 4, yy, objBusterShot);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
