<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPharaohStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>sprPharaohmask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

name = "PHARAOH MAN";
level = rmBeta;
introBGCol = make_color_rgb(255, 145, 95);
introLineCol = make_color_rgb(255, 204, 174);
standSprite = sprPharaohStand;
pose = sprPharaohPose;
poseImgSpeed = 3/60;
weaponID = objPharaohShotWeapon;
bossID = 7; //The ID on the stage select screen. The top-left has an ID of 0, then it goes clockwise (so the left panel's ID is 7)
            //The middle panel's ID is 8

contactDamage = 4;

global.weaponID = weaponID;
global.bossID = bossID;

ground = false;
attackTimer = 0;
jumpTimer = 0;
jumpAmount = 0;
canInitShoot = true;
phase = 0; //0 = nothing; 1 = jumping; 2 = jumping and shooting; 3 = shooting the big shot

//Weapon damages (only the ones different from default)
damage[objStarCrash] = 0;

damage[objSilverTomahawk] = 2;

damage[objWindStorm] = 5;

damage[objCentaurFlash] = 4;

damage[objTimeSlow] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if global.frozen == false
{
    if isFight == true
    {       
        checkGround();
        gravityCheckGround();
        generalCollision();
        
        switch phase
        {
            case 0: //Idle (standing still)
                sprite_index = sprPharaohStand;
                image_speed = 0;
                
                attackTimer -= update_rate;
                if attackTimer &lt;= 0
                {
                    if attackTimer == -1 //It's -1 when first attacking; the first attack is always a jump 'n shoot
                        phase = 2;
                    else
                    {
                        randomize();
                        phase = choose(1, 2, 3, 3); //There seems to be a higher chance of him shooting
                    }
                }
            break;
            
            
            
            case 1: //Jumping
                if attackTimer &lt;= 0
                {
                    attackTimer = 35;
                    
                    if instance_exists(prtPlayer)
                    {
                        startXScale = image_xscale;
                        
                        //Calculate the time needed to jump to MM's position, and with that, calculate the horizontal speed
                        var dx, initYspeed;
                        dx = sprite_get_xcenter_object(prtPlayer) - sprite_get_xcenter();
                        initYspeed = -6.5;
                        
                        var time, yy, yyspeed; //time: How much time (in frames) it would take to land on Mega Man's location
                        yy = bbox_bottom;
                        yyspeed = initYspeed;
                        time = 0;
                        
                        while yy &lt; prtPlayer.bbox_bottom || yyspeed &lt; 0
                        {
                            yyspeed += 0.25;
                            yy += yyspeed;
                            time += 1;
                        }
                        
                        startXspeed = dx / time;
                        yspeed = initYspeed;
                        ground = false;
                    }
                    else
                    {
                        startXScale = image_xscale;
                        startXspeed = 0;
                    }
                }
                
                if !place_meeting(x+startXspeed, y, objSolid) &amp;&amp; !place_meeting(x+startXspeed, y, prtMovingPlatformSolid)
                    xspeed = startXspeed;
                else
                {
                    while place_meeting(x, y, objSolid)
                            x -= image_xscale;
                            
                    xspeed = 0;
                }
                
                
                //Face the player
                if instance_exists(prtPlayer)
                {
                    if startXScale == -1
                    {
                        if x &gt; prtPlayer.x
                            sprite_index = sprPharaohJump;
                        else
                            sprite_index = sprPharaohJumpBack;
                    }
                    else
                    {
                        if x &gt; prtPlayer.x
                            sprite_index = sprPharaohJumpBack;
                        else
                            sprite_index = sprPharaohJump;
                    }
                }
                
                
                //When grounded, end the jump
                if ground == true
                {
                    phase = 0;
                    sprite_index = sprPharaohStand;
                    xspeed = 0;
                    yspeed = 0;
                }
            break;
            
            
            
            case 2: //Jumping 'n shooting
                if attackTimer &lt;= 0
                {
                    attackTimer = 35;
                    jumpTimer = 0;
                    
                    startXScale = image_xscale;
                    yspeed = -5;
                    sprite_index = sprPharaohJump;
                    ground = false;
                }
                
                if sprite_index == sprPharaohJump || sprite_index == sprPharaohJumpBack
                {
                    jumpTimer += update_rate;
                    if jumpTimer &gt;= 10
                    {
                        sprite_index = sprPharaohJumpShoot;
                        image_index = 0;
                        image_speed = 6/60 * update_rate;
                    }
                }
                else if sprite_index == sprPharaohJumpShoot || sprite_index == sprPharaohJumpShootBack
                {
                    if floor(image_index) == 1
                    {
                        if canInitShoot == true
                        {
                            canInitShoot = false;
                            
                            var box;
                            if image_xscale == 1
                                box = bbox_right;
                            else
                                box = bbox_left;
                            
                            instance_create(box, y-8, objPharaohManShot);
                        }
                        
                        image_speed = 6/60 * update_rate;
                    }
                    else if floor(image_index) == image_number-1
                    {
                        image_index = image_number-1;
                        image_speed = 0;
                    }
                    else
                    {
                        image_speed = 6/60 * update_rate;
                    }
                }
                
                if !place_meeting(x+startXScale * 2, y, objSolid) &amp;&amp; !place_meeting(x+startXScale * 2, y, prtMovingPlatformSolid)
                    xspeed = startXScale * 2;
                else
                {
                    while place_meeting(x, y, objSolid)
                        x -= image_xscale;
                        
                    xspeed = 0;
                }
                    
                    
                //Either jump again or end the phase
                if ground == true
                {
                    if jumpAmount == 0
                    {
                        sprite_index = sprPharaohJump;
                        jumpTimer = 0;
                        jumpAmount = 1;
                        canInitShoot = true;
                        yspeed = -5;
                    }
                    else
                    {
                        jumpAmount = 0;
                        canInitShoot = true;
                        phase = 0;
                        sprite_index = sprPharaohStand;
                        xspeed = 0;
                        yspeed = 0;
                    }
                }
                    
                    
                //Face the player
                if instance_exists(prtPlayer)
                {
                    if startXScale == -1
                    {
                        if sprite_index == sprPharaohJump || sprite_index == sprPharaohJumpBack
                        {
                            if x &gt; prtPlayer.x
                                sprite_index = sprPharaohJump;
                            else
                                sprite_index = sprPharaohJumpBack;
                        }
                        else if sprite_index == sprPharaohJumpShoot || sprite_index == sprPharaohJumpShootBack
                        {
                            if x &gt; prtPlayer.x
                                sprite_index = sprPharaohJumpShoot;
                            else
                                sprite_index = sprPharaohJumpShootBack;
                        }
                    }
                    else
                    {
                        if sprite_index == sprPharaohJump || sprite_index == sprPharaohJumpBack
                        {
                            if x &gt; prtPlayer.x
                                sprite_index = sprPharaohJumpBack;
                            else
                                sprite_index = sprPharaohJump;
                        }
                        else if sprite_index == sprPharaohJumpShoot || sprite_index == sprPharaohJumpShootBack
                        {
                            if x &gt; prtPlayer.x
                                sprite_index = sprPharaohJumpShootBack;
                            else
                                sprite_index = sprPharaohJumpShoot;
                        }
                    }
                }
            break;
            
            
            
            case 3: //Shooting a big shot
                if attackTimer &lt;= 0
                {
                    attackTimer = 35;
                    jumpTimer = 0;
                    
                    sprite_index = sprPharaohCharge;
                    image_speed = 0.25 * update_rate;
                    image_index = 0;
                }
                
                if sprite_index == sprPharaohCharge //This extra code is to make sure the animation resumes after pausing and unpausing
                    image_speed = 0.25 * update_rate;
                else if sprite_index == sprPharaohCharge2
                    image_speed = 0.07 * update_rate;
                else if sprite_index = sprPharaohCharge3
                    image_speed = 1 * update_rate;
                
                jumpTimer += update_rate; //It's not really a timer for jumping, but rather for releasing the shot; however, reusing this variable saves initializing a new one
                if jumpTimer &gt;= 40
                {                    
                    if floor(jumpTimer) == 40
                    {
                        jumpTimer = 41;
                        sprite_index = sprPharaohCharge2;
                        image_index = 0;
                        image_speed = 0.07 * update_rate;
                    }
                    else if floor(jumpTimer) == 60
                    {
                        jumpTimer = 61;
                        sprite_index = sprPharaohCharge3;
                        image_index = 1;
                        image_speed = 1 * update_rate;
                    }
                    else if floor(jumpTimer) == 70
                    {
                        jumpTimer = 71;
                        sprite_index = sprPharaohShoot;
                        
                        var shootID, box;
                        if image_xscale == 1
                            box = bbox_right+10;
                        else
                            box = bbox_left-10;
                            
                        shootID = instance_create(box, y+2, objPharaohManShotBig);
                            shootID.image_xscale = image_xscale;
                    }
                    else if floor(jumpTimer) == 75
                    {
                        jumpTimer = 76;
                        phase = 0;
                        sprite_index = sprPharaohStand;
                        xspeed = 0;
                        yspeed = 0;
                    }
                }
            break;
        }
        
        
        //Face the player
        if instance_exists(prtPlayer)
        {
            if x &gt; prtPlayer.x
                image_xscale = -1;
            else
                image_xscale = 1;
        }
    }
}
else {
    image_speed = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// onDeath
add_achievement(objPentawerAchievement);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>13,13</point>
    <point>14,14</point>
  </PhysicsShapePoints>
</object>
