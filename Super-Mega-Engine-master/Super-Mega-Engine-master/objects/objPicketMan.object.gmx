<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPicketMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Creation code (all optional):

event_inherited();

image_xscale = -1;

healthpointsStart = 10;
healthpoints = healthpointsStart;
contactDamage = 3;
reflectProjectiles = true;

damage[objMetalBlade] = 2;

damage[objPharaohShotCharged] = 4;

damage[objStarCrash] = 4;

damage[objSilverTomahawk] = 2;

damage[objWindStorm] = 2;


//Enemy specific code
shootTimer = 0;
shooting = false;
shootAmount = 0;
randomize();
shootAmountMax = choose(5, 10);
xspeed = 0;
yspeed = 0;
image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; !dead {
    if instance_exists(prtPlayer) {
        if x &lt; prtPlayer.x
            image_xscale = 1;
        else
            image_xscale = -1;
    }
    
    if !shooting {
        shootTimer += update_rate;
        if shootTimer &gt;= 120 {
            shootTimer = 0;
            shooting = true;
            image_index = 1;
            randomize();
            shootAmountMax = choose(5, 10);
        }
    }
    else {
        shootTimer += update_rate;
        if floor(shootTimer) == 15 {
            shootTimer = 16;
            image_index = 2;
            var shootID = instance_create(x+image_xscale*16, sprite_get_ycenter(), objPicket);
            if instance_exists(shootID) {
                shootID.image_xscale = image_xscale;
            }
            shootAmount++;
        }
        else if floor(shootTimer) == 30 {
            if shootAmount &gt;= shootAmountMax {
                image_index = 0;
                shooting = false;
                shootAmount = 0;
            }
            else {
                image_index = 1;
            }
            
            shootTimer = 0;
        }
    }
    
    
    //Set the protection of the Picketman
    if image_index == 0
        reflectProjectiles = true;
    else
        reflectProjectiles = false;
}
else {
    if dead {
        shootTimer = 0;
        shooting = false;
        shootAmount = 0;
        image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,8</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
