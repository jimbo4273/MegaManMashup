<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtWeapon</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

name = "RUSH COIL";
abbrev = "R.COIL";
consumption = 2;
maxshots = cfgMaxNumberOfBusterShots;
sfx = noone;

primaryCol = make_color_rgb(216, 40, 0);
secondaryCol = make_color_rgb(255, 255, 255);

character = objMegaman;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// onShoot
event_inherited();
if !ok return false;    //This line should be on every weapon

ammo += consumption;    //Return amount decreased by parent

if instance_number(objRushCoil) &lt; 1 {
    var tpY, airIncrease;
    tpY = 0;
    if prtPlayer.ground
        airIncrease = 0;
    else
        airIncrease = 20; //When in the air, the upwards range is reduced because Rush could otherwise spawn above ceilings
    
    
    while !(!position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, objSolid) &amp;&amp; !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, prtMovingPlatformSolid)
    &amp;&amp; !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, objTopSolid) &amp;&amp; !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, prtMovingPlatformJumpthrough)
    &amp;&amp; (position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, objSolid) || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, prtMovingPlatformSolid)
    || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, objTopSolid) || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, prtMovingPlatformJumpthrough)))
    &amp;&amp; !(position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objSolid) &amp;&amp; tpY &gt; sprite_get_height(prtPlayer.mask_index)/2)
    &amp;&amp; !(position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, prtMovingPlatformSolid) &amp;&amp; tpY &gt; sprite_get_height(prtPlayer.mask_index)/2)
    &amp;&amp; !(position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objTopSolid) &amp;&amp; tpY &gt; sprite_get_height(prtPlayer.mask_index)/2)
    &amp;&amp; !(position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, prtMovingPlatformJumpthrough) &amp;&amp; tpY &gt; sprite_get_height(prtPlayer.mask_index)/2)
    &amp;&amp; !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objBossDoor)
    &amp;&amp; tpY &lt;= 12+52 {
        tpY++;
    }
    
    if position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objSolid)
    || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, prtMovingPlatformSolid)
    || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objTopSolid)
    || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, prtMovingPlatformJumpthrough) {
        if position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objSolid) {
            var solidID = instance_position(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objSolid);
            attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, solidID.y-16, objRushCoil);
            attackID.shouldLand = true;
            attackID.image_xscale =prtPlayer.image_xscale;
        }
        else if position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, prtMovingPlatformSolid) {
            var solidID = instance_position(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, prtMovingPlatformSolid);
            attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, solidID.bbox_top-16, objRushCoil);
            attackID.shouldLand = true;
            attackID.image_xscale =prtPlayer.image_xscale;
        }
        else if position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objTopSolid) {
            var solidID = instance_position(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, objTopSolid);
            attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, solidID.y-16, objRushCoil);
            attackID.shouldLand = true;
            attackID.image_xscale =prtPlayer.image_xscale;
        }
        else {
            var solidID = instance_position(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)+tpY, prtMovingPlatformJumpthrough);
            attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, solidID.bbox_top-16, objRushCoil);
            attackID.shouldLand = true;
            attackID.image_xscale =prtPlayer.image_xscale;
        }
    }
    else if !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, objSolid)
    &amp;&amp; !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, prtMovingPlatformSolid)
    &amp;&amp; !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, objTopSolid)
    &amp;&amp; !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, prtMovingPlatformJumpthrough)
    &amp;&amp; !position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY-1 + airIncrease, objBossDoor)
    &amp;&amp; (position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, objSolid) || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, prtMovingPlatformSolid)
    || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, objTopSolid) || position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, prtMovingPlatformJumpthrough)) {
        if position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, objSolid) {
            var solidID = instance_position(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, objSolid);
            attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, solidID.y-16, objRushCoil);
            attackID.shouldLand = true;
            attackID.image_xscale = prtPlayer.image_xscale;
        }
        else if position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, prtMovingPlatformSolid) {
            var solidID = instance_position(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, prtMovingPlatformSolid);
            attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, solidID.bbox_top-16, objRushCoil);
            attackID.shouldLand = true;
            attackID.image_xscale = prtPlayer.image_xscale;
        }
        else if position_meeting(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, objTopSolid) {
            var solidID = instance_position(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, objTopSolid);
            attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, solidID.y-16, objRushCoil);
            attackID.shouldLand = true;
            attackID.image_xscale = prtPlayer.image_xscale;
        }
        else {
            var solidID = instance_position(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer)-tpY + airIncrease, prtMovingPlatformJumpthrough);
            attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, solidID.bbox_top-16, objRushCoil);
            attackID.shouldLand = true;
            attackID.image_xscale = prtPlayer.image_xscale;
        }
    }
    else {
        attackID = instance_create(prtPlayer.x+prtPlayer.image_xscale*26, sprite_get_ycenter_object(prtPlayer), objRushCoil);
        attackID.shouldLand = false;
        attackID.image_xscale = prtPlayer.image_xscale;
    }
    prtPlayer.isShoot = false;
}
else {
    with objMegaBusterWeapon event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
