<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRushJet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>prtMovingPlatformJumpthrough</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = 0;
canJet = true;
teleporting = true;
teleportTimer = 0;
teleportY = 0;
teleportingUp = false;
sprite_index = sprRushTeleport;
yspeed = 0;
xspeed = 0;
decreaseAmmoTimer = 0;
decreaseAmmoTimerMax = 60;
shouldLand = true;

spd = 1;
ySpd = 1;
    
alarm[0] = 4 * 60;

//Moving platform code
dead = true;
respawn = false;
neverDespawn = true;

update_rate = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with prtPlayer {
    if onRushJet &amp;&amp; !canMove {
        onRushJet = false;
        canMove = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Teleport away
teleportingUp = true;
sprite_index = sprRushTeleport;
playSFX(sfxTeleportOut);
dead = true;
xspeed = 0;
yspeed = 0;

with prtPlayer {
    if onRushJet {
        onRushJet = false;
        canMove = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if global.frozen == false
{
    if sprite_index == sprRushJet
    {
        if canJet == true //Waiting for Megaman
        {
        
            if collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top-1, prtPlayer, false, false) &amp;&amp; collision_rectangle(prtPlayer.bbox_left, prtPlayer.bbox_bottom-1, prtPlayer.bbox_right, prtPlayer.bbox_bottom + 1, self, false, false)
            {
                canJet = false;
                alarm[0] = -1;
            }
        }
        else //Flying
        {
            xspeed = spd * image_xscale;
            
            //Take away ammo
            decreaseAmmoTimer += 1;
            if decreaseAmmoTimer &gt;= decreaseAmmoTimerMax {
                decreaseAmmoTimer = 0;
                global.weapons[global.currentWeapon].ammo -= global.weapons[global.currentWeapon].consumption;
                if global.weapons[global.currentWeapon].ammo &lt;= 0
                {
                    global.weapons[global.currentWeapon].ammo = 0;
                    event_perform(ev_alarm, 0);
                }
            }
            
            if !dead &amp;&amp; collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_top-1, prtPlayer, false, false)
            {               
                //Set player properties
                prtPlayer.canMove = false;
                global.xspeed = 0;
                prtPlayer.onRushJet = true;
                
                //Move vertically
                if global.keyUp &amp;&amp; !place_meeting(prtPlayer.x, y-sprite_get_height(mskMegaman)-abs(yspeed)-1, objSolid)
                &amp;&amp; !place_meeting(x, y-abs(yspeed)-1, objSolid)
                {
                    if !place_meeting(prtPlayer.x, y-sprite_get_height(mskMegaman)-abs(yspeed)-1, prtMovingPlatformSolid)
                    &amp;&amp; !place_meeting(x, y-abs(yspeed)-1, prtMovingPlatformSolid)
                        yspeed = -ySpd;
                    else if place_meeting(prtPlayer.x, y-sprite_get_height(mskMegaman)-abs(yspeed)-1, prtMovingPlatformSolid)
                    {
                        if instance_place(prtPlayer.x, y-sprite_get_height(mskMegaman)-abs(yspeed)-1, prtMovingPlatformSolid).dead == true
                            yspeed = -ySpd;
                    }
                    else {
                        var plt = instance_place(x, y-sprite_get_height(mskMegaman)-abs(yspeed)-1, prtMovingPlatformSolid);
                        if plt &lt; 0 || plt.dead
                            yspeed = -ySpd;
                    }
                }
                else if global.keyDown &amp;&amp; !place_meeting(x, y+abs(yspeed)+1, objSolid) &amp;&amp; !place_meeting(x, y+abs(yspeed)+1, objTopSolid)
                {
                    if !place_meeting(x, y+abs(yspeed)+1, prtMovingPlatformSolid) &amp;&amp; !place_meeting(x, y+abs(yspeed)+1, prtMovingPlatformJumpthrough)
                        yspeed = ySpd;
                    else if place_meeting(x, y+abs(yspeed)+1, prtMovingPlatformSolid)
                    {
                        if instance_place(x, y+abs(yspeed)+1, prtMovingPlatformSolid).dead == true
                            yspeed = ySpd;
                    }
                    else
                    {
                        if instance_place(x, y+abs(yspeed)+1, prtMovingPlatformJumpthrough).dead == true
                            yspeed = ySpd;
                    }
                }
                else
                    yspeed = 0;
            }
            else
            {
                with prtPlayer
                {
                    if onRushJet == true
                    {
                        onRushJet = false;
                        canMove = true;
                    }
                }
                
                yspeed = 0;
            }
        }
        
        if place_meeting(x, y, objSolid) {
            event_perform(ev_alarm, 0);
        }
        
        image_speed = 0.25;
    }
}
else {
    image_speed = 0;
    if alarm[0] != -1
        alarm[0] += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();

with objMegaman
{
    if onRushJet == true
    {
        onRushJet = false;
        canMove = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();

with objMegaman
{
    if onRushJet == true
    {
        onRushJet = false;
        canMove = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if teleporting == false &amp;&amp; teleportingUp == false
{
    drawSelf();
}
else if teleporting == true
{
    if round(view_yview[0]-32+teleportY) &gt;= y &amp;&amp; shouldLand == true
    {
        if teleportTimer == 0
            playSFX(sfxTeleportIn);
        
        //Done teleporting; play a little animation before giving Mega Man control
        if teleportTimer != 9   //Rush disappears for one frame
            drawSelf();
        
        if teleportTimer == 2
            image_index = 1;
        else if teleportTimer == 4
            image_index = 0;
        else if teleportTimer == 6
            image_index = 2;
        else if (teleportTimer = 9 &amp;&amp; !collision_rectangle(x-5, bbox_top, x+5, bbox_bottom, objSolid, false, false))
        || (teleportTimer == 15 &amp;&amp; collision_rectangle(x-5, bbox_top, x+5, bbox_bottom, objSolid, false, false))
        {
            teleporting = false;
            teleportTimer = 0;
            teleportY = 0;
            if !collision_rectangle(x-5, bbox_top, x+5, bbox_bottom, objSolid, false, false)
                canCoil = true;
            sprite_index = sprRushJet;
            dead = false;
            exit;
        }
        
        if global.frozen == false
            teleportTimer += 1;
    }
    else if round(view_yview[0]-32+teleportY) &gt;= view_yview[0]+view_hview[0]
    {
        instance_destroy();
    }
    else
    {
        //Teleporting downwards
        draw_sprite_ext(sprite_index, image_index, round(x), round(view_yview[0]-32+teleportY), image_xscale, image_yscale, image_angle, c_white, 1);
        if global.yspeed != 0 &amp;&amp; !place_meeting(x, sprite_get_ycenter_object(prtPlayer) + 16, objSolid) {
            y = sprite_get_ycenter_object(prtPlayer) + 24 + global.yspeed;
        }
        else {
            y = sprite_get_ycenter_object(prtPlayer) - 8;
        }
        if global.frozen == false
            teleportY += cfgRushTeleportSpeed;
    }
}
else if teleportingUp == true
{
    if teleportY == 0
    {
        //Done teleporting; play a little animation before giving Mega Man control
        if teleportTimer != 9   //Rush disappears for one frame
            drawSelf();
        
        if teleportTimer == 2
            image_index = 2;
        else if teleportTimer == 4
            image_index = 0;
        else if teleportTimer == 6
            image_index = 1;
        else if teleportTimer = 9
        {
            teleportY -= cfgRushTeleportSpeed;
            image_speed = 0;
            image_index = 0;
            exit;
        }
        
        if global.frozen == false
            teleportTimer += 1;
    }
    else
    {
        //Teleporting upwards
        draw_sprite_ext(sprite_index, image_index, round(x), round(y+teleportY), image_xscale, image_yscale, image_angle, c_white, 1);
        
        if global.frozen == false
            teleportY -= cfgRushTeleportSpeed;
        
        if round(y+teleportY) &lt;= view_yview[0] || round(y+teleportY) &lt;= 0
            instance_destroy();
    }
}

if debug_mode || cfgDebug {
    draw_set_color(c_white);
    draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1);
    draw_arrow(sprite_get_xcenter(), sprite_get_ycenter(), sprite_get_xcenter() + xspeed * 10, sprite_get_ycenter() + yspeed * 10, 10);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
