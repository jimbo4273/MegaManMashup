<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCollisionOther</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>origX = x;
origY = y;
toX = x;
toY = y;
toDir = 1;
out = false;
on = true;
boss = -1;
returnBGM = -1;
drawLED = true;
timerLED = 0;

alarm[9] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Verify if boss is already defeated on boss rush

if boss &gt; -1 &amp;&amp; global.bossRushDefeated[boss] {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Final teleport anim

visible = true;
sprite_index = prtPlayer.spriteTeleport;
out = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go to destination

//Move camera to destination
prtPlayer.x = toX;
prtPlayer.y = toY;
prtPlayer.newSectionXOffset = 0;
prtPlayer.newSectionYOffset = 0;
with prtPlayer playerCameraInit();

x = toX;
y = toY;

show_debug_message("Teleport to (" + string(toX) + "," + string(toY) + ") now!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timerLED += 0.1;
if timerLED &gt;= 2 {
    timerLED = 0;
}
if sprite_index == prtPlayer.spriteTeleport {
    if image_index &gt;= 2 {
        if !out {
            visible = false;
            sprite_index = -1;
            var fadeoutin = instance_create(x, y, objFadeIn);
            fadeoutin.blackAlpha = 0;
            fadeoutin.blackAlphaDecrease = -0.2;
            fadeoutin.reverse = true;
            fadeoutin.deactivate = false;
            alarm[0] = 15;
            alarm[1] = 30;
        }
        else {
            //instance_activate_object(objMegaman);
            with instance_nearest(toX, toY, objBossControl) {
                if !insideView() {
                    playerFreeMovement()
                }
            }
            prtPlayer.x = toX;
            prtPlayer.y = toY;
            prtPlayer.visible = true;
            prtPlayer.image_xscale = toDir;
            x = origX;
            y = origY;            
            visible = false;
            sprite_index = sprCollisionOther;
            out = false;
            instance_activate_object(objSolid);
            if returnBGM &gt; -1 {
                playMusicVolume(returnBGM, 0.9);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if on &amp;&amp; sprite_index != prtPlayer.spriteTeleport &amp;&amp; collision_point(x + 8, y + 8, other, false, false) {
    x = other.x;
    y = other.y;
    visible = true;
    sprite_index = prtPlayer.spriteTeleport;
    image_speed = 0.15;
    with other {
        visible = false;
        global.xspeed = 0;
        global.yspeed = 0;        
    }
    //instance_deactivate_object(objMegaman);
    playerLockMovement();
    playSFX(sfxTeleportIn);
    instance_activate_object(objSectionBorderLeft);
    instance_activate_object(objSectionBorderRight);
    instance_activate_object(objSectionBorderTop);
    instance_activate_object(objSectionBorderBottom);    
    show_debug_message("Teleport start! Going to ("+string(toX)+","+string(toY)+")");

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index == prtPlayer.spriteTeleport {
    drawSelf3Colors(global.primaryCol, global.secondaryCol, global.outlineCol);
}
if on &amp;&amp; drawLED &amp;&amp; sprite_index != prtPlayer.spriteTeleport &amp;&amp; timerLED &gt; 0.5 {
    draw_rectangle_colour(x + 11, y - 22, x + 20, y - 21, c_red, c_red, c_red, c_red, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
