<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playMusicNoLoopVolume(bgmTitleScreen, 0.55);

drawText = false;
drawTextTimer = 0;
drawTextTimerMax = 25;
canProceed = true;

alarm[0] = room_speed * 23;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go back to the game opening

var fade = instance_create(0,0,objFadeout);
fade.type = "room";
fade.myRoom = rmOpening;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Timer for toggling the visibility of the "PRESS THE SPACE BAR" text
if canProceed {
    drawTextTimer += 1;
    if drawTextTimer &gt;= drawTextTimerMax {
        drawTextTimer = 0;
        drawText = !drawText;
    }
}

//Going to the stage select (or initial stage)
if global.keyPausePressed &amp;&amp; canProceed {
    canProceed = false;
    drawText = false;
    playSFX(sfxMenuSelect);
    
    var ID = instance_create(0, 0, objFadeout);
    ID.type = "room";
    if !cfgEnableSaving &amp;&amp; !cfgEnablePasswords &amp;&amp; !cfgEnableKeyConfig {
        if cfgInitialStage &gt; -1 {
            ID.myRoom = cfgInitialStage;
        }
        else {
            ID.myRoom = rmStageSelect;
        }
    }
    else {
        ID.myRoom = rmMainMenu;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprLogo, 0, round(room_width / 2), round(room_height / 2) - 55);


var oldCol;
oldCol = draw_get_color();
draw_set_color(c_white);
draw_set_font(global.MM3font);
draw_set_valign(fa_top);
draw_set_halign(fa_center);

draw_text(round(room_width/2), room_height-30, "OPEN SOURCE SOFTWARE#MAINTAINED BY THE MEGA MAN FANDOM");

if drawText {
    var text = "PRESS ";
    if global.GP &gt; -1 {
        text += string_upper(button_to_string(global.pauseButton));
    }
    else {
        text += string_upper(key_to_string(global.pauseKey));
    }
    draw_text(round(room_width/2), 125, text);
}


draw_set_color(oldCol);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
