<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWeaponEnergyBig</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPickup</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

amount = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if objEnergyBalancerEquip.count &gt; 0 &amp;&amp; (global.currentWeapon == global.character.defaultWeapon.ID || global.weapons[global.currentWeapon].ammo &gt;= global.maxAmmo) {
    var i = 0;
    var lowestIndex = 0;
    
    for (i = 1; i &lt; global.totalWeapons; i++) {
        if (global.weapons[i].ammo &lt; global.weapons[lowestIndex].ammo) {
            lowestIndex = i;
        }
    }
    
    if (global.weapons[lowestIndex].ammo &lt; global.maxAmmo) {
        global.frozen = true;
        with objHealthWeaponBar {
            increaseAmmoOffscreen = true;
            weaponToIncreaseIndex = lowestIndex;
            increaseAmmoAmount = other.amount;
        }
        
        stopSFX(sfxEnergyRestore);
        loopSFX(sfxEnergyRestore);
    }
}
else if global.weapons[global.currentWeapon].ammo &lt; global.maxAmmo {
    global.frozen = true;
    with objHealthWeaponBar {
        increaseAmmo = true;
        increaseAmmoAmount = other.amount;
    }
    
    stopSFX(sfxEnergyRestore);
    loopSFX(sfxEnergyRestore);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,-4</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
