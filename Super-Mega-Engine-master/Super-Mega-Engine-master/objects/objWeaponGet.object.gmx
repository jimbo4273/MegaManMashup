<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 0; //The timer has multiple uses
megaX = round(view_xview[0]+(view_wview[0]/2));
megaY = view_yview[0]+view_hview[0] + 40;
megaSpr = asset_get_index("spr" + global.sprName + "WeaponGetTeleport");
megaSpr2 = asset_get_index("spr" + global.sprName + "WeaponGet");
megaImg = 0;

text1Alpha = 0;
text2Alpha = 0;

global.checkpoint = false;

//global.weaponID = objPharaohShotWeapon; //For testing
if global.weaponID &gt; -1 {
    //global.weapons[global.weaponID].unlocked = true; //Unlocks the special weapon of the RM
    global.weaponID.unlocked = true; //Unlocks the special weapon of the RM
}
if global.bossID &gt; -1 {
    global.bossDefeated[global.bossID] = true; //For the stage select screen
}

phase = 0; //0 = preparing for moving up; 1 = moving up; 2 = de-teleporting; 3 = waiting; 4 = moving right; 5 = waiting for text;
           //6 = show "You got"; 7 = show weapon name; 8 = flicker between normal and weapon colors; 9 = weapon colors and timer for leaving

if cfgWeaponPreview and global.weaponID &gt; -1 {
    instance_create(16, 160, global.character);
    
    prtPlayer.showReady = false;
    prtPlayer.teleporting = true;
    
    playerLockMovement();
    
    with objHealthWeaponBar instance_destroy();
    
    with global.weaponID {
        shots = 0;
        timer = 0;
        maxTimer = room_speed;
        event_user(5);
    }
}           
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch phase {
    case 0: //Preparing for moving up
        timer++;
        if timer &gt;= 15 {
            timer = 0;
            phase = 1;
        }
    break;
    
    case 1: //Moving up
        megaY -= 8;
        if megaY &lt;= round(view_yview[0]+(view_hview[0]/2)) {
            megaY = round(view_yview[0]+(view_hview[0]/2));
            phase = 2;
        }
    break;
    
    case 2: //Teleporting animation
        timer += 1;
        if timer &gt;= 3 {
            timer = 0;
            if megaImg &lt; 2
                megaImg += 1;
            else {
                megaImg = 0;
                megaSpr = megaSpr2;
                phase = 3;
            }
        }
    break;
    
    case 3: //Waiting
        timer++;
        if timer &gt;= 40 {
            timer = 0;
            phase = 4;
        }
    break;
    
    case 4: //Moving right
        megaX += 2;
        if megaX &gt;= round(view_xview[0]+(view_wview[0]*0.75)) {
            megaX = round(view_xview[0]+(view_wview[0]*0.75));
            phase = 5;
        }
    break;
    
    case 5: //Waiting for text
        timer++;
        if timer &gt;= 40 {
            timer = 0;
            phase = 6;
        }
    break;
    
    case 6: //Show "You got"
        timer++;
        
        if timer mod 3 == 0 &amp;&amp; text1Alpha &lt; 1
            text1Alpha += 1/3;
            
        if text1Alpha &gt; 1
            text1Alpha = 1;
            
        if timer &gt;= 35 {
            timer = 0;
            phase = 7;
        }
    break;
    
    case 7: //Show weapon name
        timer++;
        
        if timer mod 3 == 0 &amp;&amp; text2Alpha &lt; 1
            text2Alpha += 1/3;
            
        if text2Alpha &gt; 1
            text2Alpha = 1;
        
        if timer &gt;= 25 {
            timer = 0;
            phase = 8;
        }
    break;
    
    case 8: //Flicker between normal and weapon color
        timer++;
        if timer &gt;= 40 {
            timer = 0;
            phase = 9;
            global.currentWeapon = 0;
        }
    break;
    
    case 9: //Weapon color and timer for leaving
        timer++;
        if timer &gt;= 4.5 * 60 {
            timer = 0;
            var ID = instance_create(x, y, objFadeout);
            ID.type = "room";
            ID.myRoom = rmPass;
        }
    break;
}

if cfgWeaponPreview and global.weaponID &gt; -1 {
    
    if instance_exists(prtPlayer) and prtPlayer.canMove {
        playerLockMovement();
    }
    
    with prtPlayer {
        image_xscale = 1;
        canHit = false;
    }
    
    with objHealthWeaponBar instance_destroy();
    
    with prtPickup instance_destroy();
    if phase == 8 {   //Flicker
        global.weapon = global.weaponID.newID - global.weapon;
        with prtPlayer event_user(0); //Colors
    }
    else if phase == 9 {   //WEAPON DEMO
        if global.currentWeapon == 0 {
            global.currentWeapon = global.weaponID.newID;
            global.weapon = global.currentWeapon;
            with prtPlayer event_user(0); //Colors
        }
        else {
            with global.weaponID event_user(6);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(megaSpr, megaImg, megaX, megaY, 1, 1, 0, c_white, 1);

draw_set_font(global.MM3font);

var oldCol, oldAlpha;
oldCol = draw_get_color();
oldAlpha = draw_get_alpha();
draw_set_color(c_white);
draw_set_alpha(1);

draw_set_halign(fa_center);
draw_set_valign(fa_middle);

var src_col1 = global.src_col1;
var src_col2 = global.src_col2;
var src_col3 = global.src_col3;
var primaryCol = src_col1;
var primaryColDark = src_col2;
var secondaryCol  = src_col3;

var textX, textY;
textX = round(view_xview[0] + (view_wview[0] / 3));
textY = round(view_yview[0] + (view_hview[0] * 0.4));

if phase &gt;= 6 {
    //Draw "You got"
    draw_set_alpha(text1Alpha);
    draw_text(textX, textY, "YOU GOT");
    draw_set_alpha(1);
}

if phase &gt;= 7 {
    //Draw the weapon name
    draw_set_alpha(text2Alpha);
    if global.weaponID &gt; -1 {
        draw_text(textX, textY+25, global.weaponID.name);
    }
    draw_set_alpha(1);
}

if global.weaponID &gt; -1 {
    primaryCol = global.weaponID.primaryCol; //The primary color for the giant MM in the weapon get screen
    primaryColDark = merge_color(primaryCol, c_black, 0.3); //The shading on the primary color
    secondaryCol = global.weaponID.secondaryCol; //The secondary color for the giant MM in the weapon get screen
}

if phase == 8 {
    //Flickering
    if timer mod 2 == 0 {
        drawSpriteColorSwap(megaSpr, megaImg, megaX, megaY, src_col1, src_col2, src_col3, primaryCol, primaryColDark, secondaryCol);
    }
}
else if phase == 9 {
    drawSpriteColorSwap(megaSpr, megaImg, megaX, megaY, src_col1, src_col2, src_col3, primaryCol, primaryColDark, secondaryCol);
}


draw_set_color(oldCol);
draw_set_color(oldAlpha);

draw_set_halign(fa_left);
draw_set_valign(fa_top);

if cfgWeaponPreview and global.weaponID &gt; -1 {
    with global.weaponID event_user(7);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
