<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWilyUFO</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum states {MOVING, OPENING, EYEBROWS, CLOSING, BEGIN_LEAVING, LEAVING, END};
state = states.MOVING;
image_speed = 0.2;
eyebrows_count = 0;
playMusic(sfxWilyUFO);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch state {
    case states.MOVING:
        if point_distance(x, y, room_width / 2, y) &gt; 1 {
            hspeed = 1;
        }
        else {
            hspeed = 0;
            state = states.OPENING;
            image_index = 3;
            stopSFX(sfxWilyUFO);
        }    
        if image_index &gt; 2 {
            image_index = 0;
        }
    break;
    case states.OPENING:
        if image_index &gt; 6 {
            state = states.EYEBROWS;
        }
    break;
    case states.EYEBROWS:
        image_speed = 0.1;
        if image_index &lt; 6 {
            image_index = 6;
            eyebrows_count++;
            if eyebrows_count &gt; 4 {
                state = states.CLOSING;
            }
        }
    break;
    case states.CLOSING:
        image_speed = -0.2;
        if image_index &lt; 2 {
            state = states.BEGIN_LEAVING;
            timer = 0;
        }
    break;
    case states.BEGIN_LEAVING:
        image_speed = 0;
        timer++;
        if timer % 4 == 0 {
            image_xscale += 0.4;
            image_yscale += 0.4;
        }
        if image_xscale &gt;= 1.5 {
            state = states.LEAVING;
        }
    break;
    case states.LEAVING:
        image_xscale -= 0.2;
        image_yscale -= 0.2;
        if image_xscale &lt; 0.2 {
            state = states.END;
            visible = false;
            var ID = instance_create(0, 0, objFadeout);
            ID.type = "room";
            ID.myRoom = rmFortress;              
        }
    break;             
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
