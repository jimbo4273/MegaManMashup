<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtGimmick</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

xspeed = -1;
yspeed = 0;
affectEnemies = false;
affectPlayer = true;
affectProjectiles = false;
affectBosses = false;
affectItems = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !global.frozen &amp;&amp; insideView() {
    if affectItems {
        with prtPickup {
            if insideView() {
                x += other.xspeed * other.update_rate;
                y += other.yspeed * other.update_rate;
                xspeed += other.xspeed;
                yspeed += other.yspeed;
                checkGround();
                gravityCheckGround();
                generalCollision();
                xspeed -= other.xspeed;
                yspeed -= other.yspeed;
            }
        }
    }
    if affectEnemies {
        with prtEnemy {
            if !dead &amp;&amp; insideView() &amp;&amp; object_get_parent(object_index) != prtBoss {
                x += other.xspeed * other.update_rate;
                y += other.yspeed * other.update_rate;
                xspeed += other.xspeed;
                yspeed += other.yspeed;
                checkGround();
                gravityCheckGround();
                generalCollision();
                xspeed -= other.xspeed;
                yspeed -= other.yspeed;
            }
        }
    }
    if affectBosses {
        with prtBoss {
            if !dead &amp;&amp; insideView() {
                x += other.xspeed * other.update_rate;
                y += other.yspeed * other.update_rate;
                xspeed += other.xspeed;
                yspeed += other.yspeed;
                checkGround();
                gravityCheckGround();
                generalCollision();
                xspeed -= other.xspeed;
                yspeed -= other.yspeed;
            }
        }
    }
    if affectProjectiles {
        with prtEnemyProjectile {
            if insideView() {
                x += other.xspeed * other.update_rate;
                y += other.yspeed * other.update_rate;
            }
        }
    }
    if affectPlayer &amp;&amp; instance_exists(prtPlayer) &amp;&amp; !prtPlayer.climbing {
        with prtPlayer {
            if !place_meeting(x + other.xspeed, y + other.yspeed, objSolid) &amp;&amp; !place_meeting(x + other.xspeed, y + other.yspeed, prtMovingPlatformSolid){
                x += other.xspeed * other.update_rate;
                y += other.yspeed * other.update_rate;
                //playerStep();
                global.xspeed += other.xspeed;
                global.yspeed += other.yspeed;
                playerCollision();
                playerMovingPlatform();
                playerCamera();
                global.xspeed -= other.xspeed;
                global.yspeed -= other.yspeed;
                
                //playerSwitchSections();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
