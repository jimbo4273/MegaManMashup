<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprYellowDevilEye</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtFortressBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

visible = false;
canHit = false;
image_speed = 0;
image_xscale = -1;
eyeTimer = 0;
hitWhite = false;
makeShadow = false;

offsetX = 16 + 12;
offsetY = 16 * 5 - 8;

blocks = 19;
block_delay = 0.5;    //Interval between blocks, in seconds

//First column
blockX[0] = 0;
blockX[1] = 0;
blockX[2] = 0;
blockX[3] = 0;

blockY[0] = 3;
blockY[1] = 2;
blockY[2] = 4;
blockY[3] = 1;

//Second column
blockX[4] = 1;
blockX[5] = 1;
blockX[6] = 1;
blockX[7] = 1;

blockY[4] = 2;
blockY[5] = 3;
blockY[6] = 1;
blockY[7] = 0;

//Third column
blockX[8] = 2;
blockX[9] = 2;
blockX[10] = 2;
blockX[11] = 2;
blockX[12] = 2;

blockY[8] = 4;
blockY[9] = 3;
blockY[10] = 2;
blockY[11] = 0;
blockY[12] = 1;

//Fourth column
blockX[13] = 3;
blockX[14] = 3;
blockX[15] = 3;
blockX[16] = 3;
blockX[17] = 3;

blockY[13] = 3;
blockY[14] = 1;
blockY[15] = 2;
blockY[16] = 0;
blockY[17] = 4;

//Fifth column
blockX[18] = 4;

blockY[18] = 2;

enum yd_states {OPENING, CLOSING, SHOOTING, CLOSED};

current_state = yd_states.CLOSED;

depth--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with objYellowDevilBlock {
    alarm[0] = -1;
    alarm[1] = room_speed * 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Close eye
current_state = yd_states.CLOSING;
show_debug_message("CLOSING");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create block
var block_id = instance_number(objYellowDevilBlock);
var block = instance_create(view_xview[0] - 100, view_yview[0] + blockY[block_id] * 16 + offsetY, objYellowDevilBlock);
block.block_id = block_id;
block.col = blockX[block_id];
block.row = blockY[block_id];
block.xpos = blockX[block_id] * 16 + offsetX;
block.ypos = blockY[block_id] * 16 + offsetY;
block.delay = block_delay;

if block_id &lt; blocks - 1 {
    alarm[0] = room_speed * block_delay;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if isFight &amp;&amp; !global.frozen {
    if alarm[0] &lt; 1 &amp;&amp; instance_number(objYellowDevilBlock) == 0 {
        alarm[0] = room_speed;
    }
    switch current_state {
        case yd_states.CLOSED:
            //visible = false;
            //canHit = false;
            mustOpen = (instance_number(objYellowDevilBlock) == blocks);
            with objYellowDevilBlock {
                if other.alarm[2] &gt; 0 || current_state != block_states.IDLE {
                    other.mustOpen = false;
                }
            }
            if mustOpen {
                if image_xscale == -1 {
                    x = view_xview[0] + view_wview[0] - 16 * 5 + random(4) - 2;
                }
                else {
                    x = view_xview[0] + 16 * 5 + random(4) - 2;
                }
                y = view_yview[0] + view_hview[0] - 16 * 9 + random(4) - 2;
                current_state = yd_states.OPENING;
                image_index = 2.9;
                depth--;
                show_debug_message("OPENING");
            }
        break;
        case yd_states.OPENING:
            visible = true;
            canHit = true;
            image_index -= 0.1;
            if image_index &lt;= 0 {
                current_state = yd_states.SHOOTING;
                show_debug_message("SHOOTING " + string(image_index) + " visible? " + string(visible));
            }
        break;
        case yd_states.SHOOTING:
            visible = true;
            canHit = true;
            image_index = 0;
            if alarm[1] == -1 &amp;&amp; !instance_exists(objYellowDevilBullet) {
                instance_create(x, y, objYellowDevilBullet);
                alarm[1] = room_speed * 1;
            }
        break;
        case yd_states.CLOSING:
            visible = true;
            canHit = true;
            image_index += 0.1;
            if image_index &gt;= 3 {
                show_debug_message("CLOSED");
                current_state = yd_states.CLOSED;
                image_xscale *= -1;
                y = view_yview[0] - 16;
                drawHitSpark = false;
                alarm[9] = -1;
                with objYellowDevilBlock {
                    if block_id == 0 {
                        alarm[0] = room_speed * delay;
                    }
                }
                instance_deactivate_object(self);
            }
        break;
    }
}
else {
    if alarm[0] &gt; 0 {
        alarm[0]++;
    }
    if alarm[1] &gt; 0 {
        alarm[1]++;
    }
    if alarm[2] &gt; 0 {
        alarm[2]++;
    }
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>add_achievement(objDevilSlayerAchievement);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
