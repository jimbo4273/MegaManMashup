<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

//Boss Info (for stage select and intro)
name = "";
level = noone;
introBGCol = noone;
introLineCol = noone;
standSprite = noone;
pose = -1;
poseImgSpeed = 3/60;
weaponID = -1;
bossID = -1;


//Initialization variables, don't change
global.weaponID = weaponID;
global.bossID = bossID;

startIntro = false;
isIntro = false;
startFight = false;
isFight = false;

xspeed = 0;
yspeed = 0;
image_xscale = -1;
image_speed = 0;
image_index = 0;

healthpoints = 28;
prevHealthPoints = healthpoints;
canHit = false;
drawHitSpark = false;
drawBoss = true; //Should we be visible? (Can't use the 'visible' variable as this prevents the Draw event from executing)

alarm[8] = 1;

//Variables to make it work with prtEnemy
reflectProjectiles = false;
reflectProjectilesLeft = false;
reflectProjectilesRight = false;
dead = false;

//Default damage
var oldFrozen = global.frozen;
for (var i = 0; object_exists(i); i++) {
    if (object_get_parent(i) == prtPlayerProjectile or object_get_parent(object_get_parent(i)) == prtPlayerProjectile) and i != prtShieldWeapon {
        global.frozen = true;
        var proj = instance_create(0, 0, i);
        damage[i] = proj.defaultBossDamage;
        with proj instance_destroy();
    }
}
global.frozen = oldFrozen;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop hit spark
canHit = true;
drawBoss = true;
drawHitSpark = false;

alarm[9] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hitspark

drawHitSpark = !drawHitSpark;
drawBoss = !drawBoss;

alarm[9] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Put the boss at the top of the screen

y = -999;//view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Starting the intro pose (and falling down)
if pose &gt; -1 &amp;&amp; startIntro == true {
    startIntro = false;
    isIntro = true;
    visible = true;
    y = view_yview[0];
}
else if pose == -1 {
    image_speed = 0;
    isIntro = false;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !global.frozen {   
    if pose &gt; -1 &amp;&amp; isIntro {
        if y &lt; ystart {
            update_rate = 1;
            gravityNoGround();
        }
        else {
            y = ystart;
            if pose &gt; -1 {
                sprite_index = pose;
            }
            yspeed = 0;
            
            if image_speed == 0
                image_index = 0;
            image_speed = poseImgSpeed;
            
            if image_index &gt;= image_number-1 {
                image_index = image_number-1;
                image_speed = 0;
                isIntro = false;
            }
        }
    }
    
    
    //Starting the actual fight
    if startFight {
        startFight = false;
        isFight = true;
        canHit = true;
    }
    
    
    //Hitspark and death
    if healthpoints &lt; prevHealthPoints {
        event_user(14);
        if healthpoints &gt; 0 {
            canHit = false;
            alarm[9] = 1;
            alarm[10] = 45; //Being able to get hit again
            drawBoss = true;
            drawHitSpark = false;
            
            global.bossHealth = healthpoints;
        }
        else {
            global.bossHealth = 0;
            healthpoints = 0;
            dead = true;
            event_user(15);
            if dead {
                stopAllSFX();
                playSFX(sfxDeath);
                
                var i, explosionID;
                    
                doExplosion(sprite_get_xcenter(), sprite_get_ycenter(), 1.5);
                
                doExplosion(sprite_get_xcenter(), sprite_get_ycenter(), 2.5);
                
                instance_activate_object(objTeleport);
                with objTeleport {
                    if !insideView() and boss == other.bossID {
                        instance_destroy();
                    }
                }
    
                instance_create(x, y, objBossDeathTimer);
                instance_destroy();
            }
            
        }
    }
    
    prevHealthPoints = healthpoints;
 
    x += xspeed * update_rate;
    y += yspeed * update_rate; 
}
else {
    if alarm[9] != -1
        alarm[9] += 1;
    if alarm[10] != -1
        alarm[10] += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if drawBoss {
    drawSelf();
}
    
if drawHitSpark {
    draw_sprite_ext(sprHitspark, 0, sprite_get_xcenter(), sprite_get_ycenter(), 1, 1, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
