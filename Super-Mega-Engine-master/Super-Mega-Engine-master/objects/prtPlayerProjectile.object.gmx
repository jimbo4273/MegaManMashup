<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 1;
with prtPlayer {
    other.dir = sign(image_xscale);
}
image_xscale = dir;
xspeed = 0;
yspeed = 0;
xaccel = 0;
yaccel = 0;
img_speed = 0;
reflected = false;

gravityEnabled = false;     //Does gravity affect this projectile?
collisionEnabled = false;   //Is collision enabled for this projectile?
groundEnabled = false;      //Should this projectile collide with ground?
destroyOnHorizontalCollision = false;
destroyOnVerticalCollision = false;
reflectible = true;     //Can it be reflected?
destroyOnSwitch = true; //Should this projectile be destroyed when switching weapons?
destroyOnScroll = true; //Should this projectile be destroyed when switching sections?
destroyOnPause = true;  //Should this projectile be destroyed when pausing?
doesNotCount = false;   //Should this projectile be ignored when counting projectiles on screen?
update_rate = 1;

defaultDamage = 1;
defaultBossDamage = 1;
passThrough = false;    //Projectile goes on if enemy is killed
unstoppable = false;    //Projectile always goes on
checkDeath = true;      //Should enemy death be checked on collision?

alarm[0] = 1;

singleHit = false;  //Hits each enemy only once
ignore = ds_list_create();  //List of enemies to ignore (used for singleHit)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed *= dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !global.frozen {

    if groundEnabled {
        checkGround();
    }
    
    if collisionEnabled {
        generalCollision();
        if destroyOnHorizontalCollision &amp;&amp; xspeed == 0 {
            instance_destroy();
        }          
        if destroyOnVerticalCollision &amp;&amp; yspeed == 0 {
            instance_destroy();
        }          
    }
    
    if gravityEnabled {
        if groundEnabled {
            gravityCheckGround();
        }
        else {
            gravityNoGround();
        }
    }
    
  

    xspeed += dir * xaccel;
    yspeed += yaccel;
    x += xspeed;
    y += yspeed; 
    image_speed = img_speed;
}
else {
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prtEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other {
    if sprite_index &gt; -1 and !reflectProjectiles &amp;&amp; damage[other.object_index] != 0
    &amp;&amp; !(reflectProjectilesLeft &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
    &amp;&amp; !(reflectProjectilesRight &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
    &amp;&amp; (!useHitBox || collision_rectangle(x + hitbox_left * sign(image_xscale), y + hitbox_top, x + hitbox_right * sign(image_xscale), y + hitbox_bottom, other, false, true)) {
        if !dead &amp;&amp; (!other.singleHit or ds_list_find_index(other.ignore, self) &lt; 0) {
            if (other.singleHit) ds_list_add(other.ignore, self);    
            if canHit {
                drawDamageNumber(x, y, damage[other.object_index]);
                healthpoints -= damage[other.object_index];
                visible = false;
                event_user(14);
            }
            
            alarm[11] = 2;
            if (!other.passThrough || healthpoints &gt; 0) and !other.unstoppable {
                with other instance_destroy();
            }
            
            stopSFX(sfxBuster);
            playSFX(sfxEnemyHit);
            
            if other.checkDeath {
                check_enemy_death();
            }
        }
    }
    else if sprite_index &gt; -1 and !dead {
        other.reflected = true;
        event_user(0); //Reflect the projectiles
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawSelf();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
